/**
 * A simple utility to suggest transaction categories based on transaction descriptions
 */

type CategoryMap = {
  [key: string]: string[];
};

// Keywords mapping to categories for different transaction types
const expenseKeywords: CategoryMap = {
  'Food & Dining': [
    'restaurant',
    'cafe',
    'coffee',
    'lunch',
    'dinner',
    'breakfast',
    'food',
    'meal',
    'takeout',
    'delivery',
    'uber eats',
    'doordash',
    'swiggy',
    'zomato',
    'mcdonalds',
    'pizza',
    'burger',
    'subway',
    'starbucks',
  ],
  Groceries: [
    'grocery',
    'supermarket',
    'market',
    'store',
    'walmart',
    'target',
    'costco',
    'aldi',
    'lidl',
    'kroger',
    'safeway',
    'fruits',
    'vegetables',
    'whole foods',
    'trader',
    'big bazaar',
    'dmart',
    'reliance',
    'nature basket',
  ],
  Transportation: [
    'gas',
    'fuel',
    'petrol',
    'diesel',
    'uber',
    'lyft',
    'taxi',
    'cab',
    'metro',
    'subway',
    'train',
    'bus',
    'parking',
    'toll',
    'auto',
    'ola',
    'rapido',
  ],
  Utilities: [
    'electricity',
    'water',
    'gas bill',
    'internet',
    'wifi',
    'broadband',
    'phone bill',
    'mobile bill',
    'utility',
    'bill payment',
    'recharge',
    'service',
    'jio',
    'airtel',
    'vodafone',
    'tata',
    'bsnl',
  ],
  Entertainment: [
    'movie',
    'theatre',
    'netflix',
    'amazon prime',
    'disney',
    'spotify',
    'music',
    'concert',
    'show',
    'event',
    'ticket',
    'game',
    'playstation',
    'xbox',
    'steam',
    'hotstar',
    'bookmyshow',
    'pvr',
    'inox',
  ],
  Shopping: [
    'clothing',
    'apparel',
    'fashion',
    'shoes',
    'accessories',
    'amazon',
    'flipkart',
    'myntra',
    'ajio',
    'mall',
    'store',
    'retail',
    'purchase',
    'shopping',
    'electronics',
    'gadget',
    'device',
    'online purchase',
  ],
  'Health & Medical': [
    'doctor',
    'hospital',
    'clinic',
    'medical',
    'medicine',
    'pharmacy',
    'healthcare',
    'health',
    'dental',
    'eye',
    'prescription',
    'therapy',
    'checkup',
    'treatment',
    'apollo',
    'medplus',
    'netmeds',
  ],
  'Personal Care': [
    'salon',
    'spa',
    'haircut',
    'beauty',
    'cosmetics',
    'makeup',
    'skincare',
    'grooming',
    'barber',
    'manicure',
    'pedicure',
    'facial',
    'massage',
  ],
  Education: [
    'tuition',
    'school',
    'college',
    'university',
    'course',
    'class',
    'training',
    'education',
    'book',
    'textbook',
    'stationery',
    'supplies',
    'fee',
    'tutorial',
    'udemy',
    'coursera',
    'edx',
    'upgrad',
    'byju',
  ],
  Home: [
    'rent',
    'mortgage',
    'property',
    'furniture',
    'decor',
    'appliance',
    'repair',
    'maintenance',
    'cleaning',
    'household',
    'housing',
    'apartment',
    'flat',
    'society',
    'interior',
    'renovation',
  ],
  'Bills & Fees': [
    'bill',
    'fee',
    'subscription',
    'membership',
    'payment',
    'due',
    'installment',
    'emi',
    'loan payment',
    'service charge',
    'bank charge',
    'tax',
    'insurance',
  ],
  'Gifts & Donations': [
    'gift',
    'present',
    'charity',
    'donation',
    'contribute',
    'fundraiser',
    'crowdfunding',
    'support',
    'give',
    'sponsor',
    'festival gift',
    'wedding gift',
  ],
  Travel: [
    'hotel',
    'flight',
    'airline',
    'booking',
    'vacation',
    'trip',
    'travel',
    'holiday',
    'resort',
    'lodge',
    'airbnb',
    'tour',
    'sightseeing',
    'makemytrip',
    'goibibo',
    'oyo',
    'trivago',
  ],
  Other: [], // Default category if no match is found
};

const incomeKeywords: CategoryMap = {
  Salary: [
    'salary',
    'pay',
    'paycheck',
    'wage',
    'income',
    'earnings',
    'compensation',
    'stipend',
    'payment',
    'remuneration',
    'payroll',
  ],
  Freelance: [
    'freelance',
    'gig',
    'project',
    'contract',
    'client',
    'consulting',
    'service',
    'fiverr',
    'upwork',
    'freelancer',
    'self-employed',
  ],
  Business: [
    'business',
    'revenue',
    'sales',
    'profit',
    'earning',
    'invoice',
    'customer',
    'client payment',
    'service fee',
    'commission',
    'proceeds',
  ],
  Investments: [
    'dividend',
    'interest',
    'return',
    'yield',
    'capital gain',
    'stock',
    'share',
    'mutual fund',
    'fixed deposit',
    'fd',
    'maturity',
    'investment return',
  ],
  Gifts: [
    'gift',
    'present',
    'bonus',
    'award',
    'prize',
    'gratuity',
    'tip',
    'reward',
    'incentive',
    'cashback',
    'refund',
    'reimbursement',
  ],
  Rental: [
    'rent',
    'rental',
    'lease',
    'tenant',
    'property income',
    'airbnb',
    'sublease',
    'housing',
    'apartment rent',
    'room rent',
  ],
  'Other Income': [], // Default category if no match is found
};

const investmentKeywords: CategoryMap = {
  Stocks: [
    'stock',
    'share',
    'equity',
    'market',
    'trading',
    'zerodha',
    'upstox',
    'groww',
    'etf',
    'nasdaq',
    'nyse',
    'bse',
    'nse',
    'sensex',
    'nifty',
  ],
  'Mutual Funds': [
    'mutual fund',
    'mf',
    'sip',
    'systematic',
    'amc',
    'index fund',
    'debt fund',
    'equity fund',
    'balanced fund',
    'portfolio',
    'asset management',
    'folio',
  ],
  Crypto: [
    'crypto',
    'bitcoin',
    'ethereum',
    'btc',
    'eth',
    'token',
    'blockchain',
    'coin',
    'wallet',
    'binance',
    'coinbase',
    'wazirx',
    'mining',
    'altcoin',
  ],
  'Fixed Income': [
    'fd',
    'fixed deposit',
    'bond',
    'debenture',
    'debt',
    'interest',
    'principal',
    'maturity',
    'coupon',
    'treasury',
    'deposit',
    'post office',
    'ppf',
    'epf',
    'nps',
  ],
  'Real Estate': [
    'property',
    'real estate',
    'land',
    'plot',
    'apartment',
    'flat',
    'house',
    'commercial',
    'residential',
    'reit',
    'construction',
    'development',
  ],
  'Gold & Precious Metals': [
    'gold',
    'silver',
    'platinum',
    'metal',
    'bullion',
    'coin',
    'jewelry',
    'sovereign',
    'digital gold',
    'etf gold',
    'sgb',
    'sovereign gold bond',
  ],
  Retirement: [
    'retirement',
    'pension',
    '401k',
    'ira',
    'superannuation',
    'annuity',
    'pf',
    'provident fund',
    'gratuity',
    'senior',
    'nps',
    'atal pension',
    'future',
  ],
  'Other Investments': [], // Default category if no match is found
};

/**
 * Suggests a category based on transaction description and type
 * @param description The transaction description
 * @param type The transaction type (expense, income, investment)
 * @returns The suggested category
 */
export function suggestCategory(description: string, type: string): string {
  const lowercaseDesc = description.toLowerCase();

  let keywordMap: CategoryMap;

  // Select appropriate keyword map based on transaction type
  switch (type) {
    case 'expense':
      keywordMap = expenseKeywords;
      break;
    case 'income':
      keywordMap = incomeKeywords;
      break;
    case 'invest':
    case 'investment':
      keywordMap = investmentKeywords;
      break;
    default:
      return 'Other';
  }

  // Check for keyword matches
  for (const [category, keywords] of Object.entries(keywordMap)) {
    for (const keyword of keywords) {
      if (lowercaseDesc.includes(keyword.toLowerCase())) {
        return category;
      }
    }
  }

  // If no match found, return default category based on type
  switch (type) {
    case 'expense':
      return 'Other';
    case 'income':
      return 'Other Income';
    case 'invest':
    case 'investment':
      return 'Other Investments';
    default:
      return 'Other';
  }
}
